; Group11 - Wednesday
;-------------------------------------------------------------------------------
; MSP430 Assembler Code Template for use with TI Code Composer Studio
;
;
;-------------------------------------------------------------------------------
            .cdecls C,LIST,"msp430.h"       ; Include device header file
            
;-------------------------------------------------------------------------------
            .def    RESET                   ; Export program entry-point to
                                            ; make it known to linker.
;-------------------------------------------------------------------------------
			.data
seconds			.byte 00h
centiseconds	.byte 00h
array			.byte 00111111b , 00000110b , 01011011b , 01001111b , 01100110b, 01101101b , 01111101b , 00000111b , 01111111b , 01101111b
lastElement
;-------------------------------------------------------------------------------
            .text                           ; Assemble into program memory.
            .retain                         ; Override ELF conditional linking
                                            ; and retain current section.
            .retainrefs                     ; And retain any sections that have
                                            ; references to current section.

;-------------------------------------------------------------------------------
RESET       mov.w   #__STACK_END,SP         ; Initialize stackpointer
StopWDT     mov.w   #WDTPW|WDTHOLD,&WDTCTL  ; Stop watchdog timer


;-------------------------------------------------------------------------------
; Main loop here
;-------------------------------------------------------------------------------
SetupP1	 	mov.b 	#0FFh,&P1DIR
SetupP2 	mov.b	#00Fh,&P2DIR
SetupCTR	mov.w   #10486d, &TA0CCR0 ; 10 ms capture value
			mov.w	#00000001000010000b, &TA0CTL ; set the register

;tassel = 10 to select smclk
;id = 00 divide by 1
;mc = 01 up
;cap = 0 compare
;ccfig => flag

SetupTime	mov.w	#000h, R1 ; centisec
			mov.w	#000h, R2 ; decisec
			mov.w	#000h, R3 ; sec
			mov.w	#000h, R4 ; decasec

Mainloop
			; Check R1 whether it is equal to 10
			;	If equal inc r2 and set r1 0
			; Check R2 whether it is equal to 10
			;	If equal inc r3 and set r2 0
			; Check R3 whether it is equal to 10
			;	If equal inc r4 and set r3 0
			; Check R4 whether it is equal to 10
			;	If equal set r1, r2, r3, r4 to 0


			mov.b	#00000000b, &P1OUT ;turn off switching
			mov.b 	#00000001b, &P2OUT
			mov.b	R4(array), &P1OUT ;decisecond

			mov.b	#00000000b, &P1OUT ;turn off switching
			mov.b 	#00000010b, &P2OUT
			mov.b	R3(array), &P1OUT ;second

			mov.b	#00000000b, &P1OUT ;turn off switching
			mov.b 	#00000100b, &P2OUT
			mov.b	R2(array), &P1OUT ;decisecond

			mov.b	#00000000b, &P1OUT ;turn off switching
			mov.b 	#00001000b, &P2OUT
			mov.b	R1(array), &P1OUT ;centisecond

			jmp 	Mainloop

TISR
			dint
			inc.w	R1
			eint
			reti

;-------------------------------------------------------------------------------
; Stack Pointer definition
;-------------------------------------------------------------------------------
            .global __STACK_END
            .sect   .stack
            
;-------------------------------------------------------------------------------
; Interrupt Vectors
;-------------------------------------------------------------------------------
            .sect   ".reset"                ; MSP430 RESET Vector
            .short  RESET
            .sect  	".int09"
			.short 	TISR

            
